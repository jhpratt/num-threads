name: Build

concurrency:
  group: build-${{ github.head_ref }}
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0

on:
  push:
    branches: ["**"]
    tags-ignore: ["**"]
    paths-ignore:
      - "**.md"
      - LICENSE-Apache
      - LICENSE-MIT
  pull_request:
    paths-ignore:
      - "**.md"
      - "**/LICENSE-Apache"
      - "**/LICENSE-MIT"
      - .github/FUNDING.yml
      - .editorconfig
      - .gitignore

jobs:
  check:
    name: Type checking (${{ matrix.target.name }})
    runs-on: ${{ matrix.target.host }}
    if: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork) || github.event_name == 'push' }}
    strategy:
      matrix:
        target:
          #  name: Windows
          #  triple: x86_64-pc-windows-gnu
          - name: Linux
            triple: x86_64-unknown-linux-gnu
            host: ubuntu-latest
          - name: Android
            triple: aarch64-linux-android
            host: ubuntu-latest
          - name: macOS
            triple: x86_64-apple-darwin
            host: macos-latest
          - name: iOS
            triple: aarch64-apple-ios
            host: macos-latest
          - name: FreeBSD
            triple: x86_64-unknown-freebsd
            host: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.28
          target: ${{ matrix.target.triple }}
          override: true

      - name: Cache cargo output
        uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.target.triple }}

      - name: Type checking
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --target ${{ matrix.target.triple }}

  test:
    name: Test (${{ matrix.target.name}})
    runs-on: ${{ matrix.target.host }}
    if: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork) || github.event_name == 'push' }}
    strategy:
      matrix:
        target:
          #  name: Windows
          #  host: windows-latest
          #  triple: x86_64-pc-windows-gnu
          - name: Linux
            host: ubuntu-latest
            triple: x86_64-unknown-linux-gnu
          - name: macOS
            host: macos-latest
            triple: x86_64-apple-darwin

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target.triple }}
          override: true

      - name: Cache cargo output
        uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.target.triple }}

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -- --test-threads=1

  fmt:
    name: Formatting
    runs-on: ubuntu-20.04
    if: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork) || github.event_name == 'push' }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-20.04
    if: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork) || github.event_name == 'push' }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache cargo output
        uses: Swatinem/rust-cache@v1

      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
